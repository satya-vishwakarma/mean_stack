{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/add-product/add-product.component.css","webpack:///./src/app/components/admin/add-product/add-product.component.html","webpack:///./src/app/components/admin/add-product/add-product.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/list-product/list-product.component.css","webpack:///./src/app/components/list-product/list-product.component.html","webpack:///./src/app/components/list-product/list-product.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/mat-confirm-dialog/mat-confirm-dialog.component.css","webpack:///./src/app/components/mat-confirm-dialog/mat-confirm-dialog.component.html","webpack:///./src/app/components/mat-confirm-dialog/mat-confirm-dialog.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/services/dialog.service.ts","webpack:///./src/app/services/growl.service.ts","webpack:///./src/app/services/products.service.ts","webpack:///./src/app/shered/custom.validators.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes} from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from \"./material/material.module\";\r\nimport { ToastyModule} from 'ng2-toasty';\r\n\r\n/** \r\n *  Component imported\r\n */\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AddProductComponent } from './components/admin/add-product/add-product.component';\r\nimport { ListProductComponent } from './components/list-product/list-product.component';\r\nimport { MatConfirmDialogComponent } from './components/mat-confirm-dialog/mat-confirm-dialog.component';\r\n\r\n\r\n\r\nconst appRoutes: Routes =  [\r\n  {path:'', component: DashboardComponent},\r\n  {path:'register', component: RegisterComponent},\r\n  {path:'login', component: LoginComponent}, \r\n  {path:'profile', component: ProfileComponent},\r\n  {path:'dashboard', component: DashboardComponent},\r\n  {path:'admin/add-product', component: AddProductComponent},\r\n  {path:'admin/list-product' , component : ListProductComponent}\r\n]\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    LoginComponent,   \r\n    ProfileComponent, \r\n    AddProductComponent, ListProductComponent, MatConfirmDialogComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    ToastyModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [MatConfirmDialogComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-card {\\r\\n      width: 80%;\\r\\n      margin: auto;\\r\\n  }  \"","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <div class=\\\"example-header-image\\\"></div>\\r\\n    <mat-card-title>Add Product</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <ng2-toasty></ng2-toasty>\\r\\n  <form class=\\\"example-form\\\" [formGroup]=\\\"product_form\\\" (submit)=\\\"addProduct(product_form.value);\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput formControlName=\\\"title\\\" name=\\\"name\\\" placeholder=\\\"Product title\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput formControlName=\\\"image\\\" name=\\\"image\\\" placeholder=\\\"Image URL\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <textarea matInput placeholder=\\\"Product Description\\\" formControlName=\\\"desc\\\" name=\\\"desc\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"example-full-width\\\">\\r\\n      <input matInput placeholder=\\\"Amount\\\" type=\\\"text\\\" class=\\\"example-right-align\\\" formControlName=\\\"price\\\" name=\\\"price\\\">\\r\\n      <span matPrefix>$&nbsp;</span>\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"example-button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\">Primary</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProductsService } from '../../../services/products.service';\r\nimport { GrowlService } from '../../../services/growl.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.css']\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n  product_form: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private productsservice: ProductsService,\r\n    private GrowlService: GrowlService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n  public submitted = false;\r\n  public product = [];\r\n  ngOnInit() {\r\n    this.product_form = this.formBuilder.group({\r\n      title: ['', Validators.required],\r\n      image: ['', Validators.required],\r\n      desc: ['', Validators.required],\r\n      price: ['', Validators.required]\r\n    });\r\n  }\r\n  get f() {\r\n    return this.product_form.controls;\r\n  }\r\n  addProduct(product_data) {\r\n    this.submitted = true;\r\n    if (this.product_form.invalid) {\r\n      return;\r\n    }\r\n\r\n    var prod_d = {\r\n      title: product_data.title,\r\n      desccription: product_data.desc,\r\n      image: product_data.image,\r\n      price: product_data.price\r\n    };\r\n\r\n    var return_data = this.productsservice.saveProduct(prod_d)\r\n      .subscribe(return_data => {\r\n        if (return_data['success']) {\r\n          this.GrowlService.success('Product save successfully.....');\r\n          this.GrowlService.Redirect('/admin/list-product');\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"body {\\r\\n  box-sizing: border-box;\\r\\n  font-family: 'Open Sans', sans-serif;\\r\\n  background: #f8f8f8;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n  text-rendering: optimizeLegibility;\\r\\n}\\r\\nbody * {\\r\\n  box-sizing: inherit;\\r\\n}\\r\\n.wrapper {\\r\\n  width: 40em;\\r\\n  margin: 0em auto;\\r\\n  background: #fff;\\r\\n  padding: 0em;\\r\\n  border-radius: 8px;\\r\\n  border: 1px solid #f5f5f5;\\r\\n}\\r\\n.wrapper > :first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n.wrapper > :last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n.desc {\\r\\n  margin: 4em auto;\\r\\n  font-size: 1.2em;\\r\\n}\\r\\n.todo {\\r\\n  background: #f9f9f9;\\r\\n  padding: 1em;\\r\\n  border-radius: 4px;\\r\\n  color: #ccc;\\r\\n  font-style: italic;\\r\\n  font-weight: lighter;\\r\\n  font-size: .9em;\\r\\n}\\r\\n.todo ul {\\r\\n  margin: .4em 0;\\r\\n  padding: 0 1em;\\r\\n}\\r\\n.todo ul li {\\r\\n  list-style-position: inside;\\r\\n}\\r\\nh1 {\\r\\n  margin: 0;\\r\\n}\\r\\nfooter {\\r\\n  margin: 4em auto;\\r\\n  text-align: center;\\r\\n  font-size: .9em;\\r\\n}\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: #2196F3;\\r\\n}\\r\\na:hover {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n.emoticon-face {\\r\\n  background: #FFEB3B;\\r\\n  border-radius: 100%;\\r\\n  width: 1.7em;\\r\\n  height: 1.7em;\\r\\n  -webkit-transform: rotate(90deg);\\r\\n          transform: rotate(90deg);\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  line-heigh: 1;\\r\\n  margin: -.4em .2em 0;\\r\\n  text-align: center;\\r\\n  border: 1px solid #FDD835;\\r\\n  padding-left: .1em;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n.emoticon-face--no-rotation {\\r\\n  -webkit-transform: rotate(0deg);\\r\\n          transform: rotate(0deg);\\r\\n}\\r\\ncode {\\r\\n  padding: .2em .3em;\\r\\n  background: #f5f5f5;\\r\\n  margin: 0 .2em;\\r\\n  border-radius: 4px;\\r\\n  font-size: .95em;\\r\\n  font-family: 'Source Code Pro';\\r\\n}\\r\\n.tac {\\r\\n  text-align: center;\\r\\n}\\r\\n.wrapper {\\r\\n  width: 68em;\\r\\n}\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\nbody {\\r\\n  color: #777;\\r\\n  font-family: 'Open Sans', Arial, sans-serif;\\r\\n}\\r\\n.product-grid {\\r\\n  width: 60em;\\r\\n  margin: auto auto;\\r\\n}\\r\\n.product-grid.product-grid--flexbox .product-grid__wrapper {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n.product-grid.product-grid--flexbox .product-grid__title {\\r\\n  height: auto;\\r\\n}\\r\\n.product-grid.product-grid--flexbox .product-grid__title:after {\\r\\n  display: none;\\r\\n}\\r\\n.product-grid__wrapper {\\r\\n  margin-left: -1rem;\\r\\n  margin-right: -1rem;\\r\\n}\\r\\n.product-grid__product-wrapper {\\r\\n  padding: 1rem;\\r\\n  float: left;\\r\\n  width: 33.33333%;\\r\\n}\\r\\n.product-grid__product {\\r\\n  padding: 1rem;\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background: #fff;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.product-grid__product:hover {\\r\\n  box-shadow: 0px 0px 0px 1px #eee;\\r\\n  z-index: 50;\\r\\n}\\r\\n.product-grid__product:hover .product-grid__extend {\\r\\n  display: block;\\r\\n}\\r\\n.product-grid__img-wrapper {\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n  padding-top: 1rem;\\r\\n  padding-bottom: 1rem;\\r\\n  height: 150px;\\r\\n}\\r\\n.product-grid__img {\\r\\n  max-width: 100%;\\r\\n  height: auto;\\r\\n  max-height: 100%;\\r\\n}\\r\\n.product-grid__title {\\r\\n  margin-top: .875rem;\\r\\n  display: block;\\r\\n  font-size: 1.125em;\\r\\n  color: #222;\\r\\n  height: 3em;\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n.product-grid__title:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  right: 0;\\r\\n  width: 2.4em;\\r\\n  height: 1.5em;\\r\\n  background: linear-gradient(to right, rgba(255, 255, 255, 0), white 50%);\\r\\n}\\r\\n.product-grid__price {\\r\\n  color: #E91E63;\\r\\n  font-weight: bold;\\r\\n  letter-spacing: .4px;\\r\\n}\\r\\n.product-grid__extend-wrapper {\\r\\n  position: relative;\\r\\n}\\r\\n.product-grid__extend {\\r\\n  display: none;\\r\\n  position: absolute;\\r\\n  padding: 0 1rem 1rem 1rem;\\r\\n  margin: .4375rem -1rem 0;\\r\\n  box-shadow: 0px 0px 0px 1px #eee;\\r\\n  background: #fff;\\r\\n  border-radius: 0 0 4px 4px;\\r\\n}\\r\\n.product-grid__extend:before {\\r\\n  content: \\\"\\\";\\r\\n  height: .875rem;\\r\\n  width: 100%;\\r\\n  position: absolute;\\r\\n  top: -.4375rem;\\r\\n  left: 0;\\r\\n  background: #fff;\\r\\n}\\r\\n.product-grid__description {\\r\\n  font-size: .875em;\\r\\n  margin-top: .4375rem;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n.product-grid__btn {\\r\\n  display: inline-block;\\r\\n  font-size: .875em;\\r\\n  color: #777;\\r\\n  background: #eee;\\r\\n  padding: .5em .625em;\\r\\n  margin-top: .875rem;\\r\\n  margin-right: .625rem;\\r\\n  cursor: pointer;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.product-grid__btn i.fa {\\r\\n  margin-right: .3125rem;\\r\\n}\\r\\n.product-grid__add-to-cart {\\r\\n  color: #fff;\\r\\n  background: #E91E63;\\r\\n}\\r\\n.product-grid__add-to-cart:hover {\\r\\n  background: #ee4c83;\\r\\n}\\r\\n.product-grid__view {\\r\\n  color: #777;\\r\\n  background: #eee;\\r\\n}\\r\\n.product-grid__view:hover {\\r\\n  background: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\">\\n\\t\\n\\t<div class=\\\"content\\\">\\n\\t\\t<!-- content here -->\\n\\t\\t<div class=\\\"product-grid product-grid--flexbox\\\">\\n\\t\\t\\t<div class=\\\"product-grid__wrapper\\\">\\n\\t\\t\\t\\t<!-- Product list start here -->\\n\\n\\t\\t\\t\\t<!-- Single product -->\\n\\t\\t\\t\\t<div *ngFor= \\\"let p of productList | async\\\" class=\\\"product-grid__product-wrapper\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"product-grid__product\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"product-grid__img-wrapper\\\">\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"{{ p.image}}\\\" alt=\\\"Img\\\" class=\\\"product-grid__img\\\" />\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"product-grid__title\\\">{{ p.title}}</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\\"product-grid__price\\\">₹{{ p.price}}</span>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"product-grid__extend-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"product-grid__extend\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"product-grid__description\\\">{{ p.desccription}}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"product-grid__btn product-grid__add-to-cart\\\"><i class=\\\"fa fa-cart-arrow-down\\\"></i> Add to cart</span>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"product-grid__btn product-grid__view\\\"><i class=\\\"fa fa-eye\\\"></i> View more</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- end Single product -->\\n\\t\\t\\t</div>\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from '../../services/products.service';\nimport { Observable } from 'rxjs';\nimport { products } from '../../../config/productInterface'\n \n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n \n  public productList: Observable<products[]>;  \n  constructor(private productsservice: ProductsService) {\n  }\n\n  ngOnInit() {\n     this.productList =  this.productsservice.getProduct();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-table [dataSource]=\\\"listData\\\"  matSort>\\r\\n    <ng-container matColumnDef=\\\"productName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef> Product Name </mat-header-cell>\\r\\n    <mat-cell *matCellDef = \\\"let element\\\"> {{element.title }}</mat-cell>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"discription\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Desccription </mat-header-cell>\\r\\n      <mat-cell *matCellDef = \\\"let element\\\"> {{element.desccription}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"image\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Image </mat-header-cell>\\r\\n        <mat-cell *matCellDef = \\\"let element\\\"> <img height=\\\"100px\\\" width=\\\"150px\\\" src=\\\"{{element.image}}\\\" /></mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"price\\\">\\r\\n            <mat-header-cell *matHeaderCellDef> Price </mat-header-cell>\\r\\n          <mat-cell *matCellDef = \\\"let element\\\"> {{element.price |currency }}</mat-cell>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"action\\\">\\r\\n              <mat-header-cell *matHeaderCellDef></mat-header-cell>\\r\\n              <mat-cell *matCellDef=\\\"let row\\\">\\r\\n                <button mat-icon-button>\\r\\n                  <mat-icon (click)= \\\"editProduct(row._id)\\\" >launch</mat-icon>\\r\\n                </button>\\r\\n                <button mat-icon-button color=\\\"warn\\\">\\r\\n                  <mat-icon (click)= \\\"deleteProduct(row._id)\\\">delete_outline</mat-icon>\\r\\n                </button>\\r\\n              </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { products } from '../../../config/productInterface';\r\nimport { DialogService } from '../../services/dialog.service';\r\nimport { ProductsService } from '../../services/products.service';\r\n\r\n@Component({\r\n  selector: 'app-list-product',\r\n  templateUrl: './list-product.component.html',\r\n  styleUrls: ['./list-product.component.css']\r\n})\r\nexport class ListProductComponent implements OnInit {\r\n\r\n  constructor(\r\n    private productsservice: ProductsService,\r\n    private dialogservice: DialogService) { }\r\n\r\n  listData: any;\r\n  listData_2: any;\r\n  displayedColumns: string[] = ['productName', 'discription', 'image', 'price', 'action'];\r\n  public productList: Observable<products[]>;\r\n  ngOnInit() {\r\n\r\n    this.datatable();\r\n  }\r\n\r\n  deleteProduct($key) {\r\n    this.dialogservice.openConfirmDialog({ msg: 'Are you sure to delete this record ?' })\r\n      .afterClosed()\r\n      .subscribe(res => {\r\n        if (res == true) {         \r\n          return this.productsservice.deletePoduct($key).subscribe(response => {\r\n            if (response['success'] == true) {\r\n              this.datatable();\r\n            }\r\n          });          \r\n        }\r\n      });\r\n  }\r\n  \r\n  datatable() {\r\n    this.listData = this.productsservice.getProduct();\r\n  }\r\n\r\n  editProduct($key){\r\n    this.dialogservice.openConfirmDialog({msg : $key});\r\n  }\r\n\r\n}\r\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n    margin: 38px auto;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"<form class=\\\"example-form\\\" [formGroup]=\\\"rFrom\\\" (ngSubmit)=\\\"login(rFrom.value);\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input formControlName=\\\"name\\\" matInput  name=\\\"name\\\" placeholder=\\\"User Name\\\" value=\\\"\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input formControlName=\\\"password\\\" matInput name=\\\"password\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]= \\\"!rFrom.valid\\\">Login</button>\\n    <button mat-raised-button color=\\\"warn\\\" (click) = \\\"resetForm();\\\">Clear</button>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder , FormGroup , Validators  } from '@angular/forms';\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  post: any;\n  rFrom : FormGroup;\n  name :string='';\n  password:string = '';\n  constructor(private fb  : FormBuilder) { \n    this.rFrom = fb.group({\n      name : [null ,Validators.required],\n      password : [null , Validators.required]\n    })\n  }\n\n  \n  ngOnInit() {\n  }\n\n  login (post) :void {\n    console.log('sdf',post);\n    \n   // this.rFrom.reset();\n   \n  //console.log( this.rFrom);\n  }\n  resetForm () \n  {\n    this.rFrom.reset();\n    \n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <div class=\\\"content-container\\\">\\r\\n    <mat-icon id=\\\"close-icon\\\" (click)= 'closeDialog(false)' > close </mat-icon>\\r\\n    <span class=\\\"content-span full-width\\\">{{data.messages}}</span>\\r\\n  </div>\\r\\n  <button  mat-flat-button id = \\\"no-button\\\"  (click)= 'closeDialog(false)' > No</button>\\r\\n  <button mat-flat-button id = \\\"yes-button\\\"  (click)= 'closeDialog(true)'> Yes</button>\\r\\n</div>\"","import { Component, OnInit , Inject } from '@angular/core';\nimport { MatDialog , MAT_DIALOG_DATA ,  MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-mat-confirm-dialog',\n  templateUrl: './mat-confirm-dialog.component.html',\n  styleUrls: ['./mat-confirm-dialog.component.css']\n})\nexport class MatConfirmDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\n  public dialogRef : MatDialogRef<MatConfirmDialogComponent>,\n  public dialog: MatDialog) { }\n  \n  ngOnInit() {\n  }\n\n  closeDialog($value)\n  {\n    this.dialogRef.close($value);\n  }\n\n}\n","module.exports = \".navbar {\\r\\n\\tposition: relative;\\r\\n\\tmargin-bottom:10px; \\r\\n}\"","module.exports = \"\\n    <nav class=\\\"navbar navbar-expand-xl navbar-dark bg-dark\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Expand at xl</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExample06\\\" aria-controls=\\\"navbarsExample06\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample06\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n        \\n          <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link disabled\\\"  [routerLink]=\\\"['/dashboard']\\\" >Dashboard</a>\\n          </li>\\n          <li class=\\\"nav-item dropdown\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">\\n            <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"https://example.com\\\" id=\\\"dropdown06\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">mangement</a>\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown06\\\">\\n              <a class=\\\"dropdown-item\\\"[routerLink]=\\\"['/admin/add-product']\\\" >Add Product</a>\\n              <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/list-product']\\\" >Product list</a>\\n              <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n            </div>\\n          </li>\\n        </ul>\\n        <form class=\\\"form-inline my-2 my-md-0\\\">\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n        </form>\\n      </div>\\n    </nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"example-form\\\" [formGroup]=\\\"regForm\\\" (ngSubmit)=\\\"register(regForm.value);\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input formControlName=\\\"userName\\\" matInput name=\\\"userName\\\" placeholder=\\\"User Name\\\" value=\\\"\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput formControlName=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"User Email\\\" value=\\\"\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput formControlName=\\\"phone\\\" name=\\\"phone \\\" placeholder=\\\"User phone number\\\" value=\\\"\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput formControlName=\\\"newPassword\\\" name=\\\"newPassword\\\" placeholder=\\\"Enter your password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput formControlName=\\\"confirmPassoword\\\" name=\\\"confirmPassoword\\\" placeholder=\\\"Confirm  password\\\" [type]=\\\"hide2? 'password' : 'text'\\\">\\r\\n    <mat-icon matSuffix (click)=\\\"hide2 = !hide2\\\">{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!regForm.valid\\\">Register</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport  { customvalidators } from '../../shered/custom.validators';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  hide = true;\r\n  hide2 = true;\r\n  submitted = false;\r\n  regForm : FormGroup;\r\n  userName:string = '';\r\n  email : string = '';\r\n  phone : number =  null ;\r\n  newPassword : string = '';\r\n  confirmPassoword:string = '';\r\n  constructor(private regF : FormBuilder) {\r\n    this.regForm = regF.group ({\r\n      userName : [null , Validators.required],\r\n      email : [null , [Validators.required,Validators.email]],\r\n      phone : [null , Validators.required],\r\n      newPassword : [ null ,Validators.required],\r\n      confirmPassoword : [null , [Validators.required]]\r\n    },{\r\n      validator : customvalidators.passwordMatch.bind(this)\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get f() { return this.regForm.controls; }\r\n\r\n  register()\r\n  {\r\n    this.submitted = true;\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as Material from \"@angular/material\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Material.MatToolbarModule,\n    Material.MatGridListModule,\n    Material.MatFormFieldModule,\n    Material.MatInputModule,\n    Material.MatRadioModule,\n    Material.MatSelectModule,\n    Material.MatCheckboxModule,\n    Material.MatDatepickerModule,\n    Material.MatNativeDateModule,\n    Material.MatButtonModule,\n    Material.MatSnackBarModule,\n    Material.MatTableModule,\n    Material.MatIconModule,\n    Material.MatPaginatorModule,\n    Material.MatSortModule,\n    Material.MatCardModule\n  ],\n  exports: [\n    Material.MatToolbarModule,\n    Material.MatGridListModule,\n    Material.MatFormFieldModule,\n    Material.MatInputModule,\n    Material.MatRadioModule,\n    Material.MatSelectModule,\n    Material.MatCheckboxModule,\n    Material.MatDatepickerModule,\n    Material.MatNativeDateModule,\n    Material.MatButtonModule,\n    Material.MatSnackBarModule,\n    Material.MatTableModule,\n    Material.MatIconModule,\n    Material.MatPaginatorModule,\n    Material.MatSortModule,\n    Material.MatCardModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog} from '@angular/material';\nimport { MatConfirmDialogComponent } from '../components/mat-confirm-dialog/mat-confirm-dialog.component';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(  private dialog : MatDialog) { }\n\n  openConfirmDialog(options) {\n   return this.dialog.open(MatConfirmDialogComponent , {\n      width : '450px',\n      panelClass: 'confirm-dialog-container',\n      disableClose : true ,\n      data : {\n        messages : options.msg\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ToastyService, ToastyConfig, ToastOptions, ToastData } from 'ng2-toasty';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GrowlService {\r\n\r\n  constructor(\r\n    private toastyService: ToastyService,\r\n    private toastyConfig: ToastyConfig,\r\n    private router: Router\r\n  ) {\r\n    this.toastyConfig.theme = 'default';\r\n    this.toastyConfig.showClose = true;\r\n    this.toastyConfig.timeout = 5000;\r\n    this.toastyConfig.position = \"top-right\";\r\n  }\r\n\r\n  /**\r\n   * Growl success \r\n   * @param mst messages \r\n   * @param title  title\r\n   */\r\n  success(mst, title = 'Success:') {\r\n    var toastOptions: ToastOptions = {\r\n      title: title,\r\n      msg: mst,\r\n    };\r\n    this.toastyService.success(toastOptions);\r\n  }\r\n\r\n  /**\r\n   * Growl Error \r\n   * @param mst messages \r\n   * @param title  title\r\n   */\r\n  error(mst, title = 'Opps:') {\r\n    var toastOptions: ToastOptions = {\r\n      title: title,\r\n      msg: mst,\r\n    };\r\n    this.toastyService.error(toastOptions);\r\n  }\r\n\r\n  /**\r\n   * Redirect url\r\n   * @param url string\r\n   */\r\n  Redirect(url , setTime =1000) {\r\n    setTimeout(() => {\r\n      this.router.navigate([url]);\r\n    }, setTime);\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders ,HttpErrorResponse } from '@angular/common/http';\r\nimport { Response } from '@angular/http';\r\nimport { map ,catchError } from \"rxjs/operators\";\r\nimport { Observable } from 'rxjs';\r\nimport { products } from '../../config/productInterface';\r\nimport { GrowlService } from '../services/growl.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  private product = [];\r\n  public product_list = [];\r\n  public apiUrl = \"http://localhost:3000/\";\r\n  public errorMasses = \"Service unavailable. please try again later\";  \r\n\r\n  constructor(private http: HttpClient , private GrowlService : GrowlService) { }\r\n  \r\n  /**\r\n   * Get products list \r\n   */\r\n  getProduct(): Observable<products[]> {\r\n    return this.http.post(this.apiUrl+'product/get-all-product', { data: false, user: 333 })\r\n      .pipe( catchError(( res : HttpErrorResponse)=>{\r\n        this.GrowlService.error(this.errorMasses);\r\n        return res.error;\r\n      } ) ,map((response: Response) => response['data']));\r\n  }\r\n\r\n  /**\r\n   * Save product \r\n   * \r\n   * @param prod_data json \r\n   */\r\n  saveProduct(prod_data) {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json; charset=utf-8' });\r\n    return this.http.post(this.apiUrl+'product/save-product', JSON.stringify(prod_data), { headers: headers })\r\n      .pipe( catchError(( res : HttpErrorResponse)=>{\r\n       this.GrowlService.error(this.errorMasses);\r\n        return res.error;\r\n      } ) ,map((response: Response) => response));\r\n  }\r\n\r\n  /**\r\n   * Delete product \r\n   * \r\n   * @param id int\r\n   */\r\n  deletePoduct(id) {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json; charset=utf-8' });\r\n    return this.http.post(this.apiUrl+'product/delete-product', {primary_key : id}, { headers: headers })\r\n      .pipe(map((response: Response) => response));\r\n  }\r\n}\r\n","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport class customvalidators {\r\n\r\n    static passwordMatch(constrol: FormGroup) {\r\n\r\n        let password = constrol.controls.newPassword.value;\r\n        let confirmPassoword = constrol.controls.confirmPassoword.value;\r\n        if (confirmPassoword == null) {\r\n            return null;\r\n        }\r\n\r\n        if (confirmPassoword !== password) {\r\n            return {\r\n                passwordMatch: true\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}